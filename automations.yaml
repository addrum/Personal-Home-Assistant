# Notifiers
- id: jubilee_line_delayed
  alias: Jubilee Line Delayed
  trigger:
    platform: state
    entity_id: sensor.jubilee
    to: 'true'
  condition:
    - condition: time
      after: '05:00:00'
      before: '22:00:00'
  action:
    - service: notify.pushbullet
      data:
        title: "Jubilee Line - {{ states.sensor.jubilee.state }}"
        message: "{{ states.sensor.jubilee.attributes.Description }}"

- id: metropolitan_line_delayed
  alias: Metropolitan Line Delayed
  trigger:
    platform: state
    entity_id: sensor.metropolitan
    to: 'true'
  condition:
    - condition: time
      after: '05:00:00'
      before: '22:00:00'
  action:
    - service: notify.pushbullet
      data:
        title: "Metropolitan Line - {{ states.sensor.metropolitan.state }}"
        message: "{{ states.sensor.metropolitan.attributes.Description }}"

# - alias: Start webcam recording when Adam is not home
#   trigger:
#     platform: state
#     entity_id: group.adams_devices
#     to: 'not_home'
#   condition:
#     - condition: state
#       entity_id: input_boolean.working_from_home
#       state: 'off'
#   action:
#     - service: switch.turn_on
#       entity_id: switch.office_camera_switch 
#     - service: notify.pushbullet
#       data:
#         message: "Office camera started recording"

# - alias: Stop webcam recording when Adam gets home
#   trigger:
#     platform: state
#     entity_id: group.adams_devices 
#     to: 'home'
#   condition:
#     - condition: state
#       entity_id: input_boolean.working_from_home
#       state: 'off'
#   action:
#     - service: switch.turn_off
#       entity_id: switch.office_camera_switch 
#     - service: notify.pushbullet
#       data:
#         message: "Office camera stopped recording"

# Lights
- id: lights_on_am_weekday
  alias: Turn lights on in the morning (weekday)
  trigger:
    platform: time
    at: '07:00:00'
  condition:
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: light.turn_on
      entity_id: light.living_room
    - service: light.turn_on
      entity_id: light.stairs_light
    # - service: notify.pushbullet
    #   data:
    #     message: "Living room and stairs lights turned on"

- id: lights_off_pm_weekday
  alias: Turn off all lights at night (weekday)
  trigger:
    platform: time
    at: '23:30:00'
  condition:
    - condition: time
      weekday:
        - sun
        - mon
        - tue
        - wed
        - thu
  action:
    - service: light.turn_off
      entity_id: group.all_lights
    # - service: notify.pushbullet
    #   data:
    #     message: "All lights turned off"

- id: lights_off_pm_weekend
  alias: Turn off all lights at night (weekend)
  trigger:
    platform: time
    at: '03:00:00'
  condition:
    - condition: time
      weekday:
        - fri
        - sat
  action:
    - service: light.turn_off
      entity_id: group.all_lights
    # - service: notify.pushbullet
    #   data:
    #     message: "All lights turned off"

- id: lights_off_am
  alias: Turn off all lights in the morning after sunrise
  trigger:
    - platform: sun
      event: sunrise
      offset: "+00:30:00"
  condition:  
    - condition: state
      entity_id: group.all_lights
      state: 'on'
  action:
    - service: light.turn_off
      entity_id: group.all_lights
    # - service: notify.pushbullet
    #   data:
    #     message: "All lights turned off"   

- id: lights_off_away
  alias: Turn off all lights if no one is home
  trigger:
    - platform: state
      entity_id: group.family_devices
      to: 'not_home'
  condition:  
    - condition: state
      entity_id: group.all_lights
      state: 'on'
  action:
    - service: light.turn_off
      entity_id: group.all_lights
    # - service: notify.pushbullet
    #   data:
    #     message: "Turned all lights off as no one is home"

- alias: Turn office lights on at sunset if Adam is home
  trigger:
    - platform: sun
      event: sunset
      offset: "-00:30:00"
    - platform: state
      entity_id: group.adams_devices
      to: 'home'
  condition:  
    condition: and
    conditions:
      - condition: sun
        after: sunset
        after_offset: "-00:30:00"
      - condition: state
        entity_id: group.adams_devices
        state: 'home'
  action:
    - service: light.turn_on
      entity_id: light.office
    # - service: notify.pushbullet
    #   data:
    #     message: "Office lights turned on"

- id: living_room_lights_on_pm_home
  alias: Turn living room lights on at sunset if someone is home
  trigger:
    - platform: sun
      event: sunset
      offset: "-00:30:00"
    - platform: state
      entity_id: group.family_devices
      to: 'home'
  condition:  
    condition: and
    conditions:
      - condition: sun
        after: sunset
        after_offset: "-00:30:00"
      - condition: state
        entity_id: group.family_devices
        state: 'home'
  action:
    - service: light.turn_on
      entity_id: light.living_room
    # - service: notify.pushbullet
    #   data:
    #     message: "Living room lights turned on"

- id: landing_lights_on_pm_home
  alias: Turn stairs light on when someone gets home
  trigger:
    - platform: sun
      event: sunset
      offset: "-00:30:00"
    - platform: state
      entity_id: group.family_devices
      to: 'home'
  condition:  
    condition: and
    conditions:
      - condition: sun
        after: sunset
        after_offset: "-00:30:00"
      - condition: state
        entity_id: group.family_devices
        state: 'home'
  action:
    - service: light.turn_on
      entity_id: light.landing
    # - service: notify.pushbullet
    #   data:
    #     message: "Stairs light turned on"

- id: update_notifications
  alias: Update notifications
  trigger:
    platform: state
    entity_id: updater.updater
  action:
    - service: notify.pushbullet
      data: 
        title: 'New Home Assistant Release'
        message: "Home Assistant {{ states.updater.updater.state }} is now available."


# Inputs
- id: living_room_brightness
  alias: "Set Living Room Brightness"
  initial_state: on
  trigger:
    platform: state
    entity_id: input_number.brightness_living_room
  action:
    service: light.turn_on
    data:
      entity_id:
        - light.living_room
    data_template:
      brightness: '{{ (trigger.to_state.state|int * 2.55) | round }}'

- id: office_brightness
  alias: "Set Office Brightness"
  initial_state: on
  trigger:
    platform: state
    entity_id: input_number.brightness_office
  action:
    service: light.turn_on
    data:
      entity_id:
        - light.office
    data_template:
      brightness: '{{ (trigger.to_state.state|int * 2.55) | round }}'